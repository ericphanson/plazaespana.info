name: PR Preview Deploy

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write

jobs:
  deploy-preview:
    runs-on: ubuntu-latest
    # Only deploy previews from the original repository, not from forks
    # Also skip Dependabot PRs
    if: |
      github.event.pull_request.head.repo.full_name == github.repository &&
      github.event.pull_request.user.login != 'dependabot[bot]'

    steps:
      - name: Find existing comment
        uses: peter-evans/find-comment@b30e6a3c0ed37e7c023ccd3f1db5c6c0b0c23aad # v4.0.0
        id: find-comment
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: '<!-- preview-deployment -->'

      - name: Post deployment started comment
        uses: peter-evans/create-or-update-comment@e8674b075228eee787fea43ef493e45ece1004c9 # v5.0.0
        id: create-comment
        with:
          comment-id: ${{ steps.find-comment.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          edit-mode: replace
          body: |
            <!-- preview-deployment -->
            ## üöÄ Preview Deployment

            **Status:** ‚è≥ Deploying preview...

            **Preview URL:** https://plazaespana.info/previews/PR${{ github.event.pull_request.number }}/

            Please wait while the preview is being built and deployed.

            ---
            *Started: ${{ github.event.pull_request.updated_at }}*

      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Setup Go
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version: '1.25'
          cache: true
          cache-dependency-path: generator/go.sum

      - name: Cache HTTP data
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
        with:
          path: data/http-cache
          # Use static cache key with version number
          # All builds share the same cache, relying on code's cache TTL for freshness
          # Prevents AEMET rate limiting by reusing cached data across multiple CI runs
          # Bump version number (v1 -> v2) to invalidate cache if needed
          key: http-cache-v1
          restore-keys: |
            http-cache-v

      - name: Install just
        uses: extractions/setup-just@e33e0265a09d6d736e2ee1e0eb685ef1de4669ff # v3

      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.NFSN_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          echo "${{ secrets.NFSN_KNOWN_HOST }}" >> ~/.ssh/known_hosts

      - name: Build and deploy preview
        env:
          NFSN_HOST: ${{ secrets.NFSN_HOST }}
          NFSN_USER: ${{ secrets.NFSN_USER }}
          AEMET_API_KEY: ${{ secrets.AEMET_API_KEY }}  # Optional: for weather forecasts in previews
        run: |
          just preview-deploy PR${{ github.event.pull_request.number }}

      - name: Set up Node.js (for validation tools)
        uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af # v4.1.0
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install validation tools
        run: npm install

      - name: Wait for server to be ready
        run: sleep 5

      - name: Validate preview deployment
        id: validate
        continue-on-error: true
        run: |
          PREVIEW_URL="https://plazaespana.info/previews/PR${{ github.event.pull_request.number }}"

          echo "üîç Validating preview at $PREVIEW_URL"
          echo ""

          # Run link checking (exit code 0 = pass, 1 = fail)
          LINKS_PASS=true
          if ! just scan-links "$PREVIEW_URL" 2>&1 | tee link-check.log; then
            LINKS_PASS=false
          fi

          # Run HTML validation (exit code 0 = pass, 1 = fail)
          HTML_PASS=true
          if ! just scan-html "$PREVIEW_URL" 2>&1 | tee html-check.log; then
            HTML_PASS=false
          fi

          # Set outputs for next step
          echo "links-pass=$LINKS_PASS" >> $GITHUB_OUTPUT
          echo "html-pass=$HTML_PASS" >> $GITHUB_OUTPUT

          # Capture link check results for comment
          if [ "$LINKS_PASS" = false ]; then
            {
              echo 'links-output<<EOF'
              grep "BROKEN" scan-results/links.txt | head -20 || echo "See job logs for details"
              echo 'EOF'
            } >> $GITHUB_OUTPUT
          else
            echo "links-output=‚úÖ No broken links found" >> $GITHUB_OUTPUT
          fi

          # Capture HTML validation results for comment
          if [ "$HTML_PASS" = false ]; then
            {
              echo 'html-output<<EOF'
              cat scan-results/html-validation.txt || echo "See job logs for details"
              echo 'EOF'
            } >> $GITHUB_OUTPUT
          else
            echo "html-output=‚úÖ HTML validates successfully" >> $GITHUB_OUTPUT
          fi

          # Exit with error if any validation failed
          if [ "$LINKS_PASS" = false ] || [ "$HTML_PASS" = false ]; then
            echo "‚ùå Validation failed"
            exit 1
          fi

          echo "‚úÖ All validations passed"

      - name: Update comment with validation results
        uses: peter-evans/create-or-update-comment@e8674b075228eee787fea43ef493e45ece1004c9 # v5.0.0
        if: always()
        with:
          comment-id: ${{ steps.create-comment.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          edit-mode: replace
          body: |
            <!-- preview-deployment -->
            ## üöÄ Preview Deployment

            **Status:** ${{ steps.validate.outcome == 'success' && '‚úÖ Deployed and validated!' || '‚ö†Ô∏è Deployed with validation issues' }}

            **Preview URL:** https://plazaespana.info/previews/PR${{ github.event.pull_request.number }}/

            ### Validation Results

            ${{ steps.validate.outcome == 'success' && '‚úÖ All checks passed!' || '' }}
            ${{ steps.validate.outputs.links-pass == 'false' && format('
            <details>
            <summary>‚ùå Link Check</summary>

            ```
            {0}
            ```

            </details>
            ', steps.validate.outputs.links-output) || '' }}
            ${{ steps.validate.outputs.html-pass == 'false' && format('
            <details>
            <summary>‚ùå HTML Validation</summary>

            ```
            {0}
            ```

            </details>
            ', steps.validate.outputs.html-output) || '' }}

            ---

            This preview will be automatically updated when you push new commits to this PR.
            It will be removed when the PR is closed or merged.

            *Last updated: ${{ github.event.pull_request.updated_at }}*
